{
  "address": "0x736Cd068A2BcFeF728525E626522A789045eb63D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x556890f723142fcfa8022a11fd6867d203c78aea61b4dc6f7c33ba2d77123cac",
  "receipt": {
    "to": null,
    "from": "0x3f4cebc4CB7dd1F14Cd0fef565f283F36906817B",
    "contractAddress": "0x736Cd068A2BcFeF728525E626522A789045eb63D",
    "transactionIndex": 16,
    "gasUsed": "877529",
    "logsBloom": "0x
    "blockHash": "0x08ca33385a7e01f32e3ff6e6709d480dfca23a334ae4d7253ab3b77c9eb5c3c0",
    "transactionHash": "0x556890f723142fcfa8022a11fd6867d203c78aea61b4dc6f7c33ba2d77123cac",
    "logs": [],
    "blockNumber": 4124950,
    "cumulativeGasUsed": "3438487",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "d04a0d853a965406e4fdafc13d800bc7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//890,061\\n//870,319\\n//846183\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    address[] public funders;\\n    AggregatorV3Interface public priceFeed;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    uint256 public constant minimumUsd = 1 * 1e18;\\n    address public immutable owner;\\n\\n    constructor(address priceFeedAdress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAdress);\\n    }\\n\\n    function fund() public payable {\\n        //want to set minimum in usd\\n        require(\\n            msg.value.getConversionRate(priceFeed) > minimumUsd,\\n            \\\"Didn't send enough amount\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset array\\n        funders = new address[](0);\\n        //withdraw funds\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == owner,\\\"sender is not owner\\\");\\n        if (msg.sender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //what happens if someone sends ETH without calling the fund function\\n    //receive\\n    //fallback\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x759032ea364670499f08d26a1003debffe01fbd47bde5940344042a04e0c5b58\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (\\n            ,\\n            /*uint80 roundId*/ int256 price /*uint256 startedAt*/ /*uint256 updatedAt*/ /* uint80 answeredInRound*/,\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        //ETH IN USD\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x93495fde7ea65baa16edbea4b6847a4c7382a438bfc9bb6ee4a6ff4769b7a53e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fe538038062000fe583398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610e7d62000168600039600081816102f0015261056e0152610e7d6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b6040516100af919061076b565b60405180910390f35b3480156100c457600080fd5b506100cd6102ee565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107e9565b61052e565b604051610103919061076b565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610875565b60405180910390f35b34801561014357600080fd5b5061014c61056c565b604051610159919061089f565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e6565b610590565b6040516101a0919061089f565b60405180910390f35b670de0b6b3a76400006101e7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cf90919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610970565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109bf565b92505081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041e57600080828154811061039857610397610a15565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041690610a44565b915050610376565b50600067ffffffffffffffff81111561043a57610439610a8d565b5b6040519080825280602002602001820160405280156104685781602001602082028036833780820191505090505b506000908051906020019061047e9291906106ab565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a590610aed565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b505090508061052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610b4e565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105db8361060b565b90506000670de0b6b3a764000085836105f49190610b6e565b6105fe9190610bf7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610cb5565b5050509150506402540be400816106a39190610d30565b915050919050565b828054828255906000526020600020908101928215610724579160200282015b828111156107235782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cb565b5b5090506107319190610735565b5090565b5b8082111561074e576000816000905550600101610736565b5090565b6000819050919050565b61076581610752565b82525050565b6000602082019050610780600083018461075c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b68261078b565b9050919050565b6107c6816107ab565b81146107d157600080fd5b50565b6000813590506107e3816107bd565b92915050565b6000602082840312156107ff576107fe610786565b5b600061080d848285016107d4565b91505092915050565b6000819050919050565b600061083b6108366108318461078b565b610816565b61078b565b9050919050565b600061084d82610820565b9050919050565b600061085f82610842565b9050919050565b61086f81610854565b82525050565b600060208201905061088a6000830184610866565b92915050565b610899816107ab565b82525050565b60006020820190506108b46000830184610890565b92915050565b6108c381610752565b81146108ce57600080fd5b50565b6000813590506108e0816108ba565b92915050565b6000602082840312156108fc576108fb610786565b5b600061090a848285016108d1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f75676820616d6f756e7400000000000000600082015250565b600061095a601983610913565b915061096582610924565b602082019050919050565b600060208201905081810360008301526109898161094d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ca82610752565b91506109d583610752565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0a57610a09610990565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4f82610752565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8257610a81610990565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad7600083610abc565b9150610ae282610ac7565b600082019050919050565b6000610af882610aca565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b38600b83610913565b9150610b4382610b02565b602082019050919050565b60006020820190508181036000830152610b6781610b2b565b9050919050565b6000610b7982610752565b9150610b8483610752565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbd57610bbc610990565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0282610752565b9150610c0d83610752565b925082610c1d57610c1c610bc8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4781610c28565b8114610c5257600080fd5b50565b600081519050610c6481610c3e565b92915050565b6000819050919050565b610c7d81610c6a565b8114610c8857600080fd5b50565b600081519050610c9a81610c74565b92915050565b600081519050610caf816108ba565b92915050565b600080600080600060a08688031215610cd157610cd0610786565b5b6000610cdf88828901610c55565b9550506020610cf088828901610c8b565b9450506040610d0188828901610ca0565b9350506060610d1288828901610ca0565b9250506080610d2388828901610c55565b9150509295509295909350565b6000610d3b82610c6a565b9150610d4683610c6a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8557610d84610990565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc257610dc1610990565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dff57610dfe610990565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3c57610e3b610990565b5b82820290509291505056fea26469706673582212209f8a6fb7786f2524f09c36d52ea9ccae50e9d3ad323925ec70269c7096e971fb64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b6040516100af919061076b565b60405180910390f35b3480156100c457600080fd5b506100cd6102ee565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107e9565b61052e565b604051610103919061076b565b60405180910390f35b34801561011857600080fd5b50610121610546565b60405161012e9190610875565b60405180910390f35b34801561014357600080fd5b5061014c61056c565b604051610159919061089f565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e6565b610590565b6040516101a0919061089f565b60405180910390f35b670de0b6b3a76400006101e7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cf90919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610970565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109bf565b92505081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610373576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041e57600080828154811061039857610397610a15565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041690610a44565b915050610376565b50600067ffffffffffffffff81111561043a57610439610a8d565b5b6040519080825280602002602001820160405280156104685781602001602082028036833780820191505090505b506000908051906020019061047e9291906106ab565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a590610aed565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b505090508061052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610b4e565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105db8361060b565b90506000670de0b6b3a764000085836105f49190610b6e565b6105fe9190610bf7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610cb5565b5050509150506402540be400816106a39190610d30565b915050919050565b828054828255906000526020600020908101928215610724579160200282015b828111156107235782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cb565b5b5090506107319190610735565b5090565b5b8082111561074e576000816000905550600101610736565b5090565b6000819050919050565b61076581610752565b82525050565b6000602082019050610780600083018461075c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b68261078b565b9050919050565b6107c6816107ab565b81146107d157600080fd5b50565b6000813590506107e3816107bd565b92915050565b6000602082840312156107ff576107fe610786565b5b600061080d848285016107d4565b91505092915050565b6000819050919050565b600061083b6108366108318461078b565b610816565b61078b565b9050919050565b600061084d82610820565b9050919050565b600061085f82610842565b9050919050565b61086f81610854565b82525050565b600060208201905061088a6000830184610866565b92915050565b610899816107ab565b82525050565b60006020820190506108b46000830184610890565b92915050565b6108c381610752565b81146108ce57600080fd5b50565b6000813590506108e0816108ba565b92915050565b6000602082840312156108fc576108fb610786565b5b600061090a848285016108d1565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f75676820616d6f756e7400000000000000600082015250565b600061095a601983610913565b915061096582610924565b602082019050919050565b600060208201905081810360008301526109898161094d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ca82610752565b91506109d583610752565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0a57610a09610990565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a4f82610752565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8257610a81610990565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad7600083610abc565b9150610ae282610ac7565b600082019050919050565b6000610af882610aca565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b38600b83610913565b9150610b4382610b02565b602082019050919050565b60006020820190508181036000830152610b6781610b2b565b9050919050565b6000610b7982610752565b9150610b8483610752565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bbd57610bbc610990565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0282610752565b9150610c0d83610752565b925082610c1d57610c1c610bc8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4781610c28565b8114610c5257600080fd5b50565b600081519050610c6481610c3e565b92915050565b6000819050919050565b610c7d81610c6a565b8114610c8857600080fd5b50565b600081519050610c9a81610c74565b92915050565b600081519050610caf816108ba565b92915050565b600080600080600060a08688031215610cd157610cd0610786565b5b6000610cdf88828901610c55565b9550506020610cf088828901610c8b565b9450506040610d0188828901610ca0565b9350506060610d1288828901610ca0565b9250506080610d2388828901610c55565b9150509295509295909350565b6000610d3b82610c6a565b9150610d4683610c6a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8557610d84610990565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc257610dc1610990565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dff57610dfe610990565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3c57610e3b610990565b5b82820290509291505056fea26469706673582212209f8a6fb7786f2524f09c36d52ea9ccae50e9d3ad323925ec70269c7096e971fb64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}